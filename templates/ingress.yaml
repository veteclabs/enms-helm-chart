{{- if (index .Values "ingress-nginx" "enabled") }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations: 
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    #nginx.ingress.kubernetes.io/configuration-snippet: |
    #  more_set_headers "Access-Control-Allow-Origin: $http_origin";
  namespace: {{.Release.Namespace}}
  name: {{.Release.Namespace}}-ingress
spec:
  rules:
    - host: {{.Release.Namespace}}.{{- (index .Values "ingress-nginx" "host") }}
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-app-frontend-service
                port:
                  number: {{ .Values.frontend.port }}

          - path: /api
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-app-frame-api-service
                port:
                  number: {{ .Values.frameApi.port }}
        {{ if .Values.timeseriesApi.enabled }}
          - path: /api/data
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-app-timeseries-api-service
                port:
                  number: {{ .Values.timeseriesApi.port }}
        {{ end }}
        {{ if .Values.timeseriesSaver.enabled }}
          - path: /tsdb
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-app-timeseries-saver-service
                port:
                  number: {{ .Values.timeseriesSaver.port }}
        {{ end }}
  tls:
    - hosts:
        - {{ .Release.Namespace }}.{{- (index .Values "ingress-nginx" "host") }}
      secretName: {{ .Release.Namespace }}-plateteam-tls
{{- end -}}