# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-app.fullname" . }}-app-frontend-controller
spec:
  selector:
    matchLabels:
      app: {{ include "my-app.fullname" . }}-app-frontend
  replicas: 3
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ include "my-app.fullname" . }}-app-frontend
    spec:
      containers:
      - name: {{ include "my-app.fullname" . }}-app-frontend-pod
#        image: vetec/frontend
        image: "{{ .Values.frontend.imageName }}:{{ .Values.frontend.tag }}"
        ports:
        - containerPort: {{ .Values.frontend.targetPort }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-backend-app.fullname" . }}-app-timeseries-api-controller
spec:
  replicas: {{ .Values.timeseriesApi.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "my-backend-app.fullname" . }}-app-timeseries-api
  template:
    metadata:
      labels:
        app: {{ include "my-backend-app.fullname" . }}-app-timeseries-api
    spec:
      containers:
        - name: backend
          image: "{{ .Values.timeseriesApi.imageName }}:{{ .Values.timeseriesApi.tag }}"
          resources:
            limits:
              memory: {{ .Values.resources.limits.memory }}
          env:
            - name: TZ
              value: "{{ .Values.env.TZ }}"
            - name: INFLUXDB_IP
              value: "{{ .Values.scada.ip }}"
            - name: INFLUXDB_PORT
              value: "{{ .Values.scada.projectName }}"
            - name: INFLUXDB_BUCKET
              value: "{{ .Values.scada.nodeName }}"
            - name: INFLUXDB_ORG
              value: "{{ .Values.database.hostname }}"
            - name: INFLUXDB_TOKEN
              value: "{{ .Values.database.port }}"
