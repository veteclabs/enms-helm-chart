# Default values for my-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

global:
  volumePath: /Users/kimhyunsoo/workDir/volumes
persistentVolume:
  path: /run/desktop/mnt/host/c/Users/21thp/workDir/volumes #C:\Users\21thp\workDir\volumes /Users/Kimtaejun/helmCharts/volumes   # /run/desktop/mnt/host/c/Users/21thp/workDir/volumes #C:\Users\21thp\workDir\volumes #/C/Users/21thp/workDir/volumes
  enabled: true
  name: enms-volume
  storageClass: manual # hostpath #manual #local-storage
  capacity: 30Gi
  accessModes:
    - ReadWriteOnce
  reclaimPolicy: Retain
  nodeName: docker-desktop
ingressNginx:
  enabled: false
  type: LoadBalancer
  port: 85
  serverName: enms.com

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "3fd40709"
  enabled: true
#  annotations: {}
  host: "enms.maeil.com"
  path: "/"
  tls: false
  tlsSecret: ""

frontend:
  imageName: vetec/frontend
  tag: "b0242ba9"
  port: 3722
  targetPort: 3722
timeseriesApi:
  inamgeName: vetec/timeseries-api
  tag: "3fd40709"
  port: 8089
  targetPort: 8089
  replicas: 3
influxdb:
  ip: 112.216.32.6
  port: 8086
  targetPort: 8086
  nodePort: 32086
  bucket: "history"
  org: "primary"
  token: "admintoken123"

mariadb:
  capacity: 10Gi
  auth:
    rootPassword: "vetec3721!"
    database: "ems"
  primary:
    service:
      type: NodePort
      nodePorts:
        mysql: 32721
    persistence:
      enabled: true
      existingClaim: mariadb-pvc
      storageClass: local-storage
      type: pvc
      accessModes:
        - ReadWriteOnce
      subPath: mariadb
redis:
  auth:
    enabled: true
    password: "vetec3721!"
  capacity: 8Gi
  architecture: standalone
  service:
    type: NodePort
    nodePorts:
      redis: 32379
  master:
    persistence:
      enabled: true
      existingClaim: redis-pvc
      storageClass: local-storage
      type: pvc
      accessModes:
        - ReadWriteOnce
      subPath: redis
    service:
      type: NodePort
      nodePorts:
        redis: 32379

https://charts:
  bitnami:
    com/bitnami:
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
